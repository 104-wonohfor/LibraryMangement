/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import DAO.RequestDAO;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.WindowAdapter;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;






/**
 *
 * @author Thang
 */
public class Notification extends javax.swing.JFrame {

    /**
     * Creates new form Notification
     */
    
    private Home home;
    public static boolean isOpen = false;

    public Notification(Home home) {
        this.home = home;
        this.setUndecorated(true);
        initComponents();
        isOpen = true;
 
        getContentPane().setBackground(java.awt.Color.WHITE);
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Point parentLocation = home.getLocation();
        Dimension parentSize = home.getSize();

        int x = (int) (parentLocation.getX() + parentSize.getWidth() / 2 - this.getSize().getWidth() / 2);
        int y = (int) (parentLocation.getY() + parentSize.getHeight() / 2 - this.getSize().getHeight() / 2);
        setLocation(x-123, y-93);
        
        if (home.getPersonIdNumber().equals("0") ){
            TablePanel.setVisible(false);
        }
        
        loadRequestTable(1);
        
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                home.setEnabled(true);
            }
        });
    }

    @Override
    public void dispose() {
        isOpen = false;
        super.dispose();
    }

    public void setPanelNotVisible() {
        LoginToViewPanel.setVisible(false);
        ImageHehe.setVisible(false);
        jLabel1.setVisible(false);
    }
    
    class CustomRenderer extends DefaultTableCellRenderer {
        private int numHighlightedRows;
    
        public CustomRenderer(int numHighlightedRows) {
            this.numHighlightedRows = numHighlightedRows;
        }
    
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
    
            // Nếu hàng nằm trong số hàng cần highlight
            if (row < numHighlightedRows) {
                c.setBackground(Color.RED);
            } else {
                c.setBackground(table.getBackground());
            }
    
            return c;
        }
    }

    public void loadRequestTable(int numHighlightedRows) {
        RequestTable.setModel(new RequestDAO().getRequestTableModel());

        CustomRenderer customRenderer = new CustomRenderer(numHighlightedRows);

        for (int i = 0; i < RequestTable.getColumnCount(); i++) {
            RequestTable.getColumnModel().getColumn(i).setCellRenderer(customRenderer);
        }

        // Custom header renderer
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(Color.YELLOW);
                setHorizontalAlignment(CENTER);
                return c;
            }
        };

        JTableHeader header = RequestTable.getTableHeader();
        header.setDefaultRenderer(headerRenderer);

        RequestTable.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackGroundPanel = new javax.swing.JPanel();
        ContentPanel = new javax.swing.JPanel();
        LoginToViewPanel = new javax.swing.JPanel();
        ImageHehe = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        TablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RequestTable = new javax.swing.JTable();
        lblBackGroundImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(637, 127));

        BackGroundPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BackGroundPanelMouseExited(evt);
            }
        });
        BackGroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ContentPanel.setBackground(new java.awt.Color(255, 255, 255));
        ContentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LoginToViewPanel.setBackground(new java.awt.Color(255, 255, 255));
        LoginToViewPanel.setPreferredSize(new java.awt.Dimension(395, 588));
        LoginToViewPanel.setRequestFocusEnabled(false);

        ImageHehe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hehe.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Login to view notifcations");

        javax.swing.GroupLayout LoginToViewPanelLayout = new javax.swing.GroupLayout(LoginToViewPanel);
        LoginToViewPanel.setLayout(LoginToViewPanelLayout);
        LoginToViewPanelLayout.setHorizontalGroup(
            LoginToViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginToViewPanelLayout.createSequentialGroup()
                .addContainerGap(127, Short.MAX_VALUE)
                .addGroup(LoginToViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginToViewPanelLayout.createSequentialGroup()
                        .addComponent(ImageHehe)
                        .addGap(24, 24, 24))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(110, 110, 110))
        );
        LoginToViewPanelLayout.setVerticalGroup(
            LoginToViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginToViewPanelLayout.createSequentialGroup()
                .addContainerGap(224, Short.MAX_VALUE)
                .addComponent(ImageHehe)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(220, 220, 220))
        );

        ContentPanel.add(LoginToViewPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        TablePanel.setPreferredSize(new java.awt.Dimension(395, 588));

        RequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        RequestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RequestTableMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(RequestTable);

        javax.swing.GroupLayout TablePanelLayout = new javax.swing.GroupLayout(TablePanel);
        TablePanel.setLayout(TablePanelLayout);
        TablePanelLayout.setHorizontalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
        );
        TablePanelLayout.setVerticalGroup(
            TablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
        );

        ContentPanel.add(TablePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        BackGroundPanel.add(ContentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 12, 395, 588));

        lblBackGroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Screenshot_3.png"))); // NOI18N
        lblBackGroundImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackGroundImageMouseExited(evt);
            }
        });
        BackGroundPanel.add(lblBackGroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BackGroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackGroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackGroundPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackGroundPanelMouseExited
        this.dispose();
        home.setEnabled(true);
    }//GEN-LAST:event_BackGroundPanelMouseExited

    private void lblBackGroundImageMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackGroundImageMouseExited
        if (home.getPersonIdNumber().equals("0") ){
            this.dispose();
            home.setEnabled(true);
        }
    }//GEN-LAST:event_lblBackGroundImageMouseExited

    private void RequestTableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RequestTableMouseExited
        this.dispose();
        home.setEnabled(true);
    }//GEN-LAST:event_RequestTableMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Notification(new Home()).setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BackGroundPanel;
    private javax.swing.JPanel ContentPanel;
    private javax.swing.JLabel ImageHehe;
    private javax.swing.JPanel LoginToViewPanel;
    private javax.swing.JTable RequestTable;
    private javax.swing.JPanel TablePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBackGroundImage;
    // End of variables declaration//GEN-END:variables
}
